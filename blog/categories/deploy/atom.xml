<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Deploy | Grails Fu]]></title>
  <link href="http://manuelvio.github.com/blog/categories/deploy/atom.xml" rel="self"/>
  <link href="http://manuelvio.github.com/"/>
  <updated>2013-11-07T09:30:07+01:00</updated>
  <id>http://manuelvio.github.com/</id>
  <author>
    <name><![CDATA[Manuel "Unno" Vio]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Inserire il numero di revisione git nel nome del file war (modo semplice)]]></title>
    <link href="http://manuelvio.github.com/blog/2013/03/27/simple-git-revision-number-in-war-filename/"/>
    <updated>2013-03-27T15:24:00+01:00</updated>
    <id>http://manuelvio.github.com/blog/2013/03/27/simple-git-revision-number-in-war-filename</id>
    <content type="html"><![CDATA[<p>Nel mio ultimo progetto volevo un trovare un modo semplice di inserire il numero di revisione di git nel nome del file war, così ho installato il plugin <a href="http://grails.org/plugins/build-info">build-info</a>.</p>

<!-- more -->


<p>Questo plugin rende disponibile un gran numero di informazioni più o meno utili, tra le quali anche il numero di revisione di un eventuale Software di controllo di versione (Git e Subversion sono supportati).
Sebbene non facesse esattamente ciò che volevo ho provato a vedere se, con qualche piccolo hack, sarei riuscito ad inserire il numero di revisione nel nome del file war, ma mi sono accorto che l'applicazione girava senza problemi con un <code>run-app</code>, mentre andava in crash quando cercavo di farla girare come war (<code>run-war</code>).
Da un controllo nei file di log è saltata fuori un'eccezione (IllegalArgumentException) con un messaggio specifico: "Malformed \uxxxx encoding".</p>

<p>La ricerca su Google non mi ha dato molta soddisfazione, se non quella di confermare un'ipotesi iniziale di qualche carattere non permesso in un non meglio specificato <code>property file</code>.
Ho provato ad eliminare tutte le ultime modifiche che potessero avere qualche riferimento con l'errore in questione, ma senza ottenere risultati, così ho deciso di provare a rimuovere anche il plugin e, finalmente, l'applicazione è ritornata a funzionare.</p>

<p>Da quello che ho visto nel codice del plugin, nel file <code>application.properties</code> presente nel war erano stati inseriti anche i contenuti delle variabili d'ambiente al momento della creazione dell'archivio, ed è probabile che uno di questi mandasse in tilt la compilazione.
Dato che comunque avrei dovuto gestire la cosa da me ho deciso che avrei fatto a meno del plugin (quasi) per intero.</p>

<p>La parte che estraeva il numero di revisione l'ho copiata all'interno del file <code>BuildConfig.groovy</code>, con qualche piccola modifica:</p>

<p>``` groovy BuildConfig.groovy
...
grails.project.war.file = "target/${appName}-${appVersion}-${determineRevision()}.war"
...
def determineRevision() {</p>

<pre><code>// original code borrowed from build-info plugin
// https://github.com/mjhugo/grails-build-info/blob/master/scripts/_Events.groovy
def scmVersion = 'NO VERSION'
try {
    def command = "git rev-parse HEAD"
    def proc = command.execute()
    proc.waitFor()
    if (proc.exitValue() == 0) {
        scmVersion = proc.in.text.take(5)
    }
} catch (IOException e) {
    println e
}
scmVersion
</code></pre>

<p>}</p>

<p>```</p>

<p>In questo modo nel nome del file war saranno presenti anche i primi cinque caratteri della revisione git.</p>
]]></content>
  </entry>
  
</feed>
